
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration.UserSecrets;

using MinimalAPIProfesional.Data;
using MinimalAPIProfesional.Data.Models;
using MinimalAPIProfesional.DTO;



namespace MinimalAPIProfesional.Services;

public class EFCorePersonService : IPersonService
{

     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                                Dependency injections                                                                                          !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================





     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                                       Fields                                                                                                  !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================
     private readonly ApiDbContext _context;





     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                                      Constants                                                                                                !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================





     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                                      Properties                                                                                               !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================





     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                                       Instances                                                                                               !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================





     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                                       Indexers                                                                                                !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================





     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                                        Events                                                                                                 !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================





     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                                      Constructors                                                                                             !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================
     public EFCorePersonService(ApiDbContext p_context)                                                                                                                                                 // Nous récupérons en paramètre le Service ApiDbContext injecté par le framework ASP.NET Core
     {
          _context = p_context;
     }





     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                                     Initialisations                                                                                           !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================





     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                                   Synchronous methods                                                                                         !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================
     // Permet de transformer l'Output renvoyé en passant d'un Model à un autre manuellement ----------------------------------------------------------------------------------------------------------
     // Equivalent à l'outil communautaire "AutoMapper" : plus rapide mais moins ~sûr car nous pouvons 'oublier' une transformation -------------------------------------------------------------------
     //                                     ----------
     // ATTENTION : il est préférable de faire cette transformation dans le service et non dans le contrôleur, car le service est réutilisable par d'autres contrôleurs (ex : pour les tests unitaires)
     private PersonOutputModel ToOutputModel(Person dbPerson) => new PersonOutputModel
               (
                    dbPerson.Id,
                    $"{dbPerson.FirstName} {dbPerson.LastName}",
                    dbPerson.Birthday == DateTime.MinValue ? null : dbPerson.Birthday
               );





     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                                  Asynchronous methods                                                                                         !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================





     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                                       Endpoints                                                                                               !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================
     // MapGET ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     public async Task<List<PersonOutputModel>> GetAll()
     {
          return (await _context.PersonTable.ToListAsync()).ConvertAll(ToOutputModel);
     }



     public async Task<PersonOutputModel?> GetById(int p_id)
     {
          Person? dbPersonn = await _context.PersonTable.Where(w => w.Id == p_id).FirstOrDefaultAsync();

          if (dbPersonn is not null)
          {
               return ToOutputModel(dbPersonn);
          }
          else
          {
               return null;
          }
     }





     // MapPOST ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     public async Task<PersonOutputModel> Add(PersonInputModel p_personInputModel)
     {
          Person? dbPerson = new Person
          {
               FirstName = p_personInputModel.FirstName,
               LastName  = p_personInputModel.LastName,
               Birthday  = p_personInputModel.Birthday.GetValueOrDefault()
          };
          
                    _context.PersonTable.Add(dbPerson);
          await     _context.SaveChangesAsync();


          return new PersonOutputModel
          (
               dbPerson.Id,
               $"{dbPerson.FirstName} {dbPerson.LastName}",
               dbPerson.Birthday == DateTime.MinValue ? null : dbPerson.Birthday
          );
     }





     // MapPUT ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     public async Task<bool> Update(int p_id, PersonInputModel p_personInputModel)
     {
          return await _context.PersonTable
                              .Where(w => w.Id == p_id)
                              .ExecuteUpdateAsync(eua => eua.SetProperty(sp => sp.FirstName,   p_personInputModel.FirstName)
                                                            .SetProperty(sp => sp.LastName,    p_personInputModel.LastName)
                                                            .SetProperty(sp => sp.Birthday,    p_personInputModel.Birthday)) > 0;



          // ATTENTION : voici une version plus élaborée décrite dans : Développement d'API avec ASP.NET / TP 2 / Corrigé (part 3) / 08:45
          // -----------------------------------------------------------------------------------------------------------------------------

          // var dbTodo = await ContextBoundObject.Todos.FirstOrDefaultAsync(testc => testc.Id == id && testc.UserId == UserSecretsIdAttribute);
          // if (dbTodo is null) return false;

          // dbTodo.Title     = item.Title;
          // dbTodo.StartDate = item.StartDate ?? dbTodo.SartDate;
          // dbTodo.EndDate   = item.EndDate ?? dbTodo.EndDate;

          // context.Todos.Update(dbTodo);
          // return await context.SaveChangesAsync() > 0
     }





     // MapDELETE -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     public async Task<bool> Delete(int p_id)
     {
          return await _context.PersonTable.Where(w => w.Id == p_id).ExecuteDeleteAsync() > 0;
     }





     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                               Standard operators redefined                                                                                    !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================
     // Unary operators -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


     // Binary operators ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


     // Conversion operators --------------------------------------------------------------------------------------------------------------------------------------------------------------------------





     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                                 Standard methods redefined                                                                                    !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================
     // ToString() ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


     // Equals() --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


     // HashCode() ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------





     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                                        Nested types                                                                                           !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================





     // ===============================================================================================================================================================================================
     //                                                                                                                                                                                               !
     //                                                                                          Finalizer                                                                                            !
     //                                                                                                                                                                                               !
     // ===============================================================================================================================================================================================
     // Unmanaged resources ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
}
